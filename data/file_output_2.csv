condition,,
sponsors,,nct_id
intervention,,brief_title
oot.find('sponsors').find('lead_sponsor').find('agency').text ,,agency
root.find('sponsors').find('collaborator').find('agency').text ,,agency_class
primary_completion_date,,brief_summary
start_date,,detailed_description
completion_date,,overall_status
,,phase
clinical_data = {,,study_type
"            'nct_id': root.findtext('id_info/nct_id'),",,has_expanded_access
"            'brief_title': root.findtext('brief_title'),",,intervention_type
"            'official_title': root.findtext('official_title'),",,intervention_name
"            'agency': root.findtext('sponsors/lead_sponsor/agency'),",,gender
"            'agency_class': root.findtext('sponsors/lead_sponsor/agency_class'),",,minimum_age
"            'collaborator_agency': root.findtext('sponsors/collaborator/agency'),",,maximum_age
"            'brief_summary': root.findtext('brief_summary/textblock'),",,healthy_volunteers
"            'detailed_description': root.findtext('detailed_description/textblock'),",,inclusion_criteria
"            'overall_status': root.findtext('overall_status'),",,exclusion_criteria
"            'phase': root.findtext('phase'),",,
"            'study_type': root.findtext('study_type'),",,
"            'has_expanded_access': root.findtext('has_expanded_access'),",,
"            'intervention_type': root.findtext('intervention/intervention_type'),",,
"            'intervention_name': root.findtext('intervention/intervention_name'),",,
"            'lead_sponsor_agency': root.find('sponsors').find('lead_sponsor').find('agency').text,",,
"            'primary_completion_date': root.findtext('primary_completion_date'),",,
"            'start_date': root.findtext('start_date'),",,
"            'completion_date': root.findtext('completion_date'),",,
"            'gender': root.findtext('eligibility/gender'),",,
"            'minimum_age': root.findtext('eligibility/minimum_age'),",,
"            'maximum_age': root.findtext('eligibility/maximum_age'),",,
"            'healthy_volunteers': root.findtext('eligibility/healthy_volunteers'),",,
"            'why_stopped': root.findtext('why_stopped'),",,
        },,
,,
        # Extract Inclusion and Exclusion Criteria,,
        criteria_textblock = root.findtext('eligibility/criteria/textblock'),,
"        inclusion_criteria, exclusion_criteria = extract_criteria(criteria_textblock)",,
        clinical_data['inclusion_criteria'] = inclusion_criteria,,
        clinical_data['exclusion_criteria'] = exclusion_criteria,,
,,
        return clinical_data,,
,,
    except FileNotFoundError:,,
"        print(f""Error: File '{file_path}' not found."")",,
        return None,,
    except ET.ParseError:,,
"        print(f""Error: Invalid XML format in '{file_path}'."")",,
        return None,,
    except AttributeError:,,
"        print(f""Error: Element not found in '{file_path}'."")",,
        return None,,
,,
Now the clinical_data dictionary will contain the additional information you requested.,,
